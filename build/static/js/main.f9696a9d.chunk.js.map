{"version":3,"sources":["shared/user.state.js","components/Header.js","components/Message.js","components/Chat.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["username","atom","key","default","Header","className","Message","user","message","name","useRecoilValue","Chat","myRef","useRef","useState","socket","setSocket","msg","setmsg","msgs","setmsgs","useEffect","io","on","prev","current","scrollTop","scrollHeight","ref","map","m","Math","random","onSubmit","e","preventDefault","messages","date","Date","now","emit","type","placeholder","onChange","target","value","disabled","Login","text","setText","setName","useSetRecoilState","history","useHistory","push","required","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9696a9d.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const username = atom({\r\n  key: \"username\",\r\n  default: \"\",\r\n});\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"container h-12 bg-blue-500 flex items-center justify-center  \">\r\n      <p className=\"text-2xl font-bold text-white\">Let's Chat</p>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { username } from \"../shared/user.state\";\r\n\r\nconst Message = ({ user, message }) => {\r\n  const name = useRecoilValue(username);\r\n  return (\r\n    <div\r\n      className={`px-4 w-9/12 py-1  my-2 ${\r\n        name === user ? \" ml-auto \" : \" mr-auto \"\r\n      } `}\r\n    >\r\n      <p\r\n        className={`text-lg font-bold ${\r\n          name === user ? \"text-right \" : \" text-left \"\r\n        }  `}\r\n      >\r\n        {user === name ? \"you\" : user}\r\n      </p>\r\n      <div\r\n        className={`bg-blue-300 p-1 max-w-max px-2  ${\r\n          name === user\r\n            ? \"rounded-l-xl rounded-r-sm ml-auto\"\r\n            : \"rounded-r-xl rounded-l-sm mr-auto\"\r\n        } `}\r\n      >\r\n        <p className=\"text-lg font-medium text-black\">{message}</p>\r\n      </div>\r\n      {/* <p className=\"text-md font-medium text-gray-600\">123132123</p> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { io } from \"socket.io-client\";\r\nimport { username } from \"../shared/user.state\";\r\nimport Header from \"./Header\";\r\nimport Message from \"./Message\";\r\n\r\nconst Chat = () => {\r\n  const myRef = useRef(null);\r\n  const name = useRecoilValue(username);\r\n  const [socket, setSocket] = useState();\r\n  const [msg, setmsg] = useState(\"\");\r\n  const [msgs, setmsgs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = io();\r\n\r\n    setSocket(socket);\r\n    socket.on(\"message\", (message) => {\r\n      setmsgs((prev) => [...prev, message]);\r\n      myRef.current.scrollTop = myRef.current.scrollHeight;\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const messages = {\r\n      date: Date.now(),\r\n      user: name,\r\n      message: msg,\r\n    };\r\n\r\n    socket.emit(\"message\", messages);\r\n    setmsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {socket && (\r\n        <div className=\"container h-screen bg-white  relative\">\r\n          <Header />\r\n          <div ref={myRef} className=\"container h-4/5 overflow-y-scroll \">\r\n            {msgs &&\r\n              msgs.map((m) => (\r\n                <Message\r\n                  key={Math.random()}\r\n                  user={m.user}\r\n                  message={m.message}\r\n                />\r\n              ))}\r\n          </div>\r\n          <form\r\n            className=\"w-full h-16 sticky top-full flex items-center px-2 \"\r\n            onSubmit={onSubmit}\r\n          >\r\n            <input\r\n              className=\"w-5/6 h-12 p-2 text-lg font-medium rounded-l-lg outline-none bg-blue-100 \"\r\n              type=\"text\"\r\n              placeholder=\"message\"\r\n              onChange={(e) => setmsg(e.target.value)}\r\n              value={msg}\r\n            />\r\n            <button\r\n              disabled={!msg}\r\n              className=\" h-12 w-1/6 bg-blue-400 text-xl font-semibold rounded-r-lg\"\r\n              type=\"submit\"\r\n            >\r\n              send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { username } from \"../shared/user.state\";\r\n\r\nconst Login = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const setName = useSetRecoilState(username);\r\n  const history = useHistory();\r\n  const getStart = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/chat\");\r\n    setName(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={getStart}\r\n        className=\"container h-screen bg-blue-400 p-4 flex flex-col justify-around items-center\"\r\n      >\r\n        <p className=\"font-sans text-5xl font-extrabold\">Let's Chat</p>\r\n        <input\r\n          className=\"w-full h-16 rounded-md outline-none p-4 text-xl font-medium \"\r\n          type=\"text\"\r\n          placeholder=\"insert username\"\r\n          onChange={(e) => setText(e.target.value)}\r\n          value={text}\r\n          required\r\n        />\r\n        <button className=\"w-60 bg-yellow-300 h-12 text-xl font-semibold capitalize rounded-lg\">\r\n          get started\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Chat from \"./components/Chat\";\n\nimport Login from \"./components/Login\";\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/chat\" component={Chat} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}